configurations:
  - &default
    working_directory: ~/emcasa
  - &nodejs
    <<: *default
    docker:
    - image: circleci/ruby:2.4-node
  - &android
    <<: *default
    docker:
    - image: circleci/android:api-26-node8-alpha
  - &macos
    <<: *default
    macos:
      xcode: "9.2.0"
    shell: /bin/bash --login -eo pipefail

aliases:
  - &set-version-name
    name: Setup release configuration
    environment:
      BETA_TESTERS: product,dev
      ALHPA_TESTERS: dev
    command: >-
      export VERSION_NAME=$(.circleci/version.sh $([ $CIRCLE_BRANCH != "master" ] && echo "$CIRCLE_BRANCH")) &&
      export BUILD_NUMBER=$CIRCLE_BUILD_NUM &&
      export TESTER_GROUPS=$([ $CIRCLE_BRANCH != "master" ] && echo $ALPHA_TESTERS || echo $BETA_TESTERS)
  - &configure-keychain
    name: Setup build keychain
    command: >-
      export FASTLANE_USER=$APPLE_ID &&
      export FASTLANE_PASSWORD=$APPLE_PASSWORD &&
      export KEYCHAIN_NAME=${KEYCHAIN_NAME:-~/Library/Keychains/build.keychain} &&
      export KEYCHAIN_PASSWORD=${KEYCHAIN_PASSWORD:-passwd} &&
      mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles/ &&
      security create-keychain -p "$KEYCHAIN_PASSWORD" "$KEYCHAIN_NAME" &&
      security default-keychain -s "$KEYCHAIN_NAME"

version: 2
jobs:
  checkout:
    <<: *nodejs
    steps:
    - checkout
    - run: sudo apt-get -y -qq install awscli
    - restore_cache:
        keys:
        - v1-node-modules-{{ checksum "package.json" }}
    - restore_cache:
        keys:
        - v1-gems-{{ checksum "Gemfile.lock" }}
    - run: bundle check || bundle install --path vendor/bundle
    - run: mkdir -p tmp/logs tmp/screenshots tmp/.secrets
    - run: yarn install --no-optional
    - run: aws s3 sync $AWS_SECRETS_BUCKET ~/emcasa/tmp/.secrets
    - save_cache:
        paths:
        - node_modules
        key: v1-node-modules-{{ checksum "package.json" }}
    - save_cache:
        paths:
        - vendor/bundle
        key: v1-gems-{{ checksum "Gemfile.lock" }}
    - persist_to_workspace:
        root: .
        paths: .
  # unit tests
  test:
    <<: *nodejs
    steps:
    - attach_workspace:
        at: ~/emcasa
    - run: yarn test
  build_ios:
    <<: *macos
    steps:
    - attach_workspace:
        at: ~/emcasa
    - restore_cache:
        keys:
        - v1-cocoapods-{{ checksum "ios/Podfile" }}
    - run: cd ios && pod install
    # - run: xcrun instruments -w "iPhone 6 (11.2)" || true
    - run: .circleci/ios/build.sh
    # - run: xcrun simctl uninstall "iPhone 6" com.EmCasa.native
    # - run: xcrun simctl install "iPhone 6" com.EmCasa.native
    # - run: yarn e2e --reuse --debug-synchronization 10000
    - save_cache:
        paths:
        - ~/.cocoapods
        key: v1-cocoapods-{{ checksum "ios/Podfile" }}
  build_android:
    <<: *android
    steps:
    - attach_workspace:
        at: ~/emcasa
    - restore_cache:
        key: v1-gradle-{{ checksum "android/build.gradle" }}-{{ checksum  "android/app/build.gradle" }}
    - run: sdkmanager --install "extras;android;m2repository" "extras;google;m2repository"
    - run: sdkmanager --licenses
    - run: export TERM=xterm && cd android && ./gradlew assembleDebug
    - save_cache:
        paths:
        - ~/.gradle
        key: v1-gradle-{{ checksum "android/build.gradle" }}-{{ checksum  "android/app/build.gradle" }}
  deploy_staging_ios:
    <<: *macos
    environment:
      IOS_XCCONFIG_FILE: ~/emcasa/.secrets/ios/secrets.xcconfig
      IOS_CERTIFICATE_FILE: ~/emcasa/.secrets/ios/app.p12
      IOS_PROVISIONING_FILE: ~/emcasa/.secrets/ios/ad-hoc.mobileprovision
    steps:
    - attach_workspace:
        at: ~/emcasa
    - run: bundle check || bundle install --path vendor/bundle
    - run: *configure-keychain
    - run: *configure-release
    - run: >-
        agvtool new-marketing-version $VERSION_NAME &&
        agvtool new-version -all $BUILD_NUMBER
    - run: BUILD_CONFIGURATION=Beta .circleci/ios/build.sh
    - run: >-
        bundle exec fastlane run crashlytics
        ipa_path:"$PWD/ios/build/EmCasa-Beta.ipa"
        api_token:"$FABRIC_API_KEY"
        build_secret:"$FABRIC_BUILD_SECRET"
        groups:"$TESTER_GROUPS"

  deploy_staging_android:
    <<: *android
    environment:
      ANDROID_KEYSTORE_FILE: ~/emcasa/.secrets/android/keystore.jks
      PLAY_STORE_CERTIFICATE_FILE: ~/emcasa/.secrets/android/play-store.p12
    steps:
    - attach_workspace:
        at: ~/emcasa
    - run: *configure-release
    - run: >-
        sed -Ei '' "s/(versionCode) ([[:digit:]]*)/\1 $BUILD_NUMBER/" android/app/build.gradle &&
        sed -Ei '' "s/(versionName) \"(.*)\"/\1 \"$VERSION_NAME\"/" android/app/build.gradle
    - run: bundle check || bundle install --path vendor/bundle
    - run: export TERM=xterm && cd android && ./gradlew assembleStaging
    - run: >-
        bundle exec fastlane run crashlytics
        apk_path"$PWD/android/app/build/outputs/apk/app-staging.apk"
        api_token:"$FABRIC_API_KEY",
        build_secret:"$FABRIC_BUILD_SECRET",
        groups:"$TESTER_GROUPS"

workflows:
  version: 2
  commit:
    jobs:
    - checkout
    - test:
        requires:
        - checkout
    - build_ios:
        requires:
        - checkout
    - build_android:
        requires:
        - checkout
    - deploy_staging:
        type: approval
        requires:
        # - build_ios
        - build_android
    - deploy_staging_ios:
        requires:
        - deploy_staging
    - deploy_staging_android:
        requires:
        - deploy_staging
